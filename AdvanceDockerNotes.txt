1. How to create the docker containers in a new file system and not in the root  
    This is done inorder to maintain the root storage space

    1.1 Steps
        check the default location where the docker containers are store as default in the server
        Path:
            /var/lib/docker/containers/
            /var/lib/docker/image/overlay2/imagedb/content/sha256
    
    1.2 How to change the directory
        Create a configuration under /etc/docker
            daemon.json
    
    1.3 Create a configuration
        {
            "date-root": "/mnt/storage"
        }
    
    1.4 Create a directory for storing the docker Images
        /mnt/storage
    
    We have created a new directory and configured the new path to store the docker images.
    
    1.5 To see the new configuration reflected restart the service and the daemon configuration
        systemctl daemon-reload
        systemctl restart docker
    
    1.6 Now try creating a container and check the /mnt/storage

2. What are "Dangeling Images"
    When an new docker image is create with the same tag the old image will become a Dangeling Images.
    It will consume unnecessary space in the file system.
    It will have the value <none>

    2.1 prune
    docker system prune
    docker container prune
    docker image prune

    O/P
        WARNING! This will remove:
        - all stopped containers
        - all networks not used by at least one container
        - all dangling images
        - all dangling build cache

        Are you sure you want to continue? [y/N]
    If a container is running with the dangling image then the prune command will not delete that image.
    We have to remove the dangling image forcefuly

    2.2 Delete only specific Image
        docker image rm <image-name:tag
        docker rmi <image-name:tag>
        docker image rm 26b77e58432b 
        -f for force

3. How to login/logout to docker
    docker login
    docker logout
    credentials will be stored in /root/.docker/config.json

4. How to keep the created image to a centerlized location
    Push:
        docker image tag <image-name:tag> <account-name>/<image-name:tag>
        docker image push <account-name>/<image-name:tag>
    Pull:
        docker pull <account-name>/<image-name:tag>

5. How to create a image from running container
    docker container commit <container ID> <image-name:tag>

6. How to share image files

    6.1 compress the image
        docker image save <image-name:tag> > <filename.tar>

    6.2 how to load/extract the image from compressed images
        docker image load < <filename.tar> 

7. How to access the container application?

    Possible reason that if you are not able to access the container is the port is not open

    docker container run -d --name <container-name> -p 8080:80 <image-name:tag>
        -p <port-to-access-outside:localhost-port>

8. Docker volumes - Volume mapping
    Normally, when a Docker container is removed, all the container's data is lost. 
    Volume mapping allows you to store this data outside the container

        - There are two types of volume mapping
            - Bind mount
            - Named Volume

        - This mapping is done initailly during the container creation

            docker container run -d --name <container-name> -v <host-path:container-path> <image-name:tag>

        - Bind mount
            Maps a specific path on the host to a path in the container.
            
                docker run -v /home/user/data:/app/data myimage

        - Name volume
            Docker create and manages a volume in the default location

                docker run -v myvolume:/app/data myimage
                    myvolume: "/var/lib/docker/volumes/myvolume/_data"

        - Changes on the host path are instantly visible in the container and vice versa.

9. docker system df
    docker stats
    docker container inspect <container name>
    docker image inspect <image-name:tag>
    docker logs <container-name>


10. docker network
    list all the docker network available 
        docker network ls
    To know the docker ip's    
        ip a s

11. How to create the a default docker network
    
    By default we'll have a docker bridge driver which is responsible for assigning Ip's to the docker containers
    - It is always recommended to create a custom network for security reasons

    Network creation
        docker network create <network-name>
    
    Check the container details
        docker inspect <container name>

    Create container with custom network
        docker run -d --network <network-name> --name <container-name> <image-name:tag>
